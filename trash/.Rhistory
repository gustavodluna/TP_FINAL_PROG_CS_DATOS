library(factoextra)
install.packages("caret")
library(Metrics)
install.packages("factoextra")
install.packages("Metrics")
library(tidyverse)
library(RColorBrewer)
library(ggplot2)
library(factoextra)
library(cluster)
library(caret)
library(dplyr)
library(Metrics)
i
ruta<-"G:\Mi unidad\00-LICENCIATURA DE DATOS\TERCER AÑO\PROG PARA CIENCIA DE DATOS\TPs\TPFINAL\celulares_PySpark.csv"
ruta<-"G:/Mi unidad/00-LICENCIATURA DE DATOS/TERCER AÑO/PROG PARA CIENCIA DE DATOS/TPs/TPFINAL/celulares_PySpark.csv"
df<-read.csv(ruta)
(5)
df.head(5)
df.head(5)
df.head()
valores_unicos <- function(df, columna) {
# Extraer la columna
columna_datos <- df[[columna]]
# Obtener los valores únicos y contarlos
conteo_valores <- table(columna_datos)
# Mostrar el conteo de valores
print(conteo_valores)
}
# Definir la función para cambiar el nombre de una columna
cambiar_nombre_columna <- function(dataframe, nombre_columna_antiguo, nombre_columna_nuevo) {
if (nombre_columna_antiguo %in% names(dataframe)) {
names(dataframe)[names(dataframe) == nombre_columna_antiguo] <- nombre_columna_nuevo
return(dataframe)
} else {
print("El nombre de la columna antiguo no existe en el dataframe.")
return(NULL)
}
}
# Llamamos a la función para cambiar el nombre de la columna
df <- cambiar_nombre_columna(df, "X5G", "5G")
# Convertir la columna 'batería' a tipo string
df$bateria <- as.character(df$bateria)
# Filtrar los teléfonos
df_2 <- subset(df,NFC == "true")
library(ggplot2)
ggplot(df_2, aes(x = precio, y = ram, color = sim)) +
geom_point()
# Aplicar un gráfico de clústeres
# Selección de características numéricas para el clúster
data_cluster <- df_2 %>% select(precio,rating)
# Escalado de datos
data_scaled <- scale(data_cluster)
# Aplicación del método de k-means para clustering
set.seed(123) # Para reproducibilidad
km_res <- kmeans(data_scaled, centers = 3, nstart = 25)
# Visualización de clústeres
fviz_cluster(km_res, data = data_scaled,
ellipse.type = "convex",
geom = "point",
data_cluster <- df_2 %>% select(precio,rating)
# Escalado de datos
data_scaled <- scale(data_cluster)
